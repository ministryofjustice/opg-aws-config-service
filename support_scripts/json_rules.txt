"elasticache-redis-cluster-automatic-backup-check": {
	"name": "elasticache-redis-cluster-automatic-backup-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK",
	"parameters": ""
},
"elasticsearch-encrypted-at-rest": {
	"name": "elasticsearch-encrypted-at-rest",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELASTICSEARCH_ENCRYPTED_AT_REST",
	"parameters": ""
},
"elasticsearch-in-vpc-only": {
	"name": "elasticsearch-in-vpc-only",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELASTICSEARCH_IN_VPC_ONLY",
	"parameters": ""
},
"approved-amis-by-id": {
	"name": "approved-amis-by-id",
	"description": "Config rule, generated by terraform",
	"source_identifier": "APPROVED_AMIS_BY_ID",
	"parameters": "{\"amiIds\": \"\"}"
},
"approved-amis-by-tag": {
	"name": "approved-amis-by-tag",
	"description": "Config rule, generated by terraform",
	"source_identifier": "APPROVED_AMIS_BY_TAG",
	"parameters": "{\"amisByTagKeyAndValue\": \"\"}"
},
"autoscaling-group-elb-healthcheck-required": {
	"name": "autoscaling-group-elb-healthcheck-required",
	"description": "Config rule, generated by terraform",
	"source_identifier": "AUTOSCALING_GROUP_ELB_HEALTHCHECK_REQUIRED",
	"parameters": ""
},
"desired-instance-tenancy": {
	"name": "desired-instance-tenancy",
	"description": "Config rule, generated by terraform",
	"source_identifier": "DESIRED_INSTANCE_TENANCY",
	"parameters": "{\"tenancy\": \"\", \"imageId\": \"\", \"hostId\": \"\"}"
},
"desired-instance-type": {
	"name": "desired-instance-type",
	"description": "Config rule, generated by terraform",
	"source_identifier": "DESIRED_INSTANCE_TYPE",
	"parameters": "{\"instanceType\": \"\"}"
},
"ebs-optimized-instance": {
	"name": "ebs-optimized-instance",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EBS_OPTIMIZED_INSTANCE",
	"parameters": ""
},
"ec2-stopped-instance": {
	"name": "ec2-stopped-instance",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_STOPPED_INSTANCE",
	"parameters": ""
},
"ec2-instance-detailed-monitoring-enabled": {
	"name": "ec2-instance-detailed-monitoring-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_INSTANCE_DETAILED_MONITORING_ENABLED",
	"parameters": ""
},
"ec2-instance-managed-by-ssm": {
	"name": "ec2-instance-managed-by-ssm",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": ""
},
"ec2-instance-no-public-ip": {
	"name": "ec2-instance-no-public-ip",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_INSTANCE_NO_PUBLIC_IP",
	"parameters": ""
},
"ec2-instances-in-vpc": {
	"name": "ec2-instances-in-vpc",
	"description": "Config rule, generated by terraform",
	"source_identifier": "INSTANCES_IN_VPC",
	"parameters": "{\"vpcId\": \"\"}"
},
"ec2-managedinstance-applications-blacklisted": {
	"name": "ec2-managedinstance-applications-blacklisted",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_MANAGEDINSTANCE_APPLICATIONS_BLACKLISTED",
	"parameters": ""
},
"ec2-managedinstance-applications-required": {
	"name": "ec2-managedinstance-applications-required",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_MANAGEDINSTANCE_APPLICATIONS_REQUIRED",
	"parameters": ""
},
"ec2-managedinstance-association-compliance-status-check": {
	"name": "ec2-managedinstance-association-compliance-status-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK",
	"parameters": ""
},
"ec2-managedinstance-inventory-blacklisted": {
	"name": "ec2-managedinstance-inventory-blacklisted",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": "{\"inventoryNames\": \"\", \"platformType\": \"\"}"
},
"ec2-managedinstance-patch-compliance-status-check": {
	"name": "ec2-managedinstance-patch-compliance-status-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK",
	"parameters": ""
},
"ec2-managedinstance-platform-check": {
	"name": "ec2-managedinstance-platform-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": "{\"agentVersion\": \"\", \"platformType\": \"\", \"platformVersion\": \"\"}"
},
"ec2-security-group-attached-to-eni": {
	"name": "ec2-security-group-attached-to-eni",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_SECURITY_GROUP_ATTACHED_TO_ENI",
	"parameters": ""
},
"ec2-volume-inuse-check": {
	"name": "ec2-volume-inuse-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EC2_VOLUME_INUSE_CHECK",
	"parameters": "{\"deleteOnTermination\": \"\"}"
},
"eip-attached": {
	"name": "eip-attached",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EIP_ATTACHED",
	"parameters": ""
},
"elb-acm-certificate-required": {
	"name": "elb-acm-certificate-required",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELB_ACM_CERTIFICATE_REQUIRED",
	"parameters": ""
},
"elb-custom-security-policy-ssl-check": {
	"name": "elb-custom-security-policy-ssl-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELB_CUSTOM_SECURITY_POLICY_SSL_CHECK",
	"parameters": ""
},
"elb-logging-enabled": {
	"name": "elb-logging-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELB_LOGGING_ENABLED",
	"parameters": "{\"s3BucketNames\": \"\", \"(optional)\": \"\"}"
},
"elb-predefined-security-policy-ssl-check": {
	"name": "elb-predefined-security-policy-ssl-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELB_PREDEFINED_SECURITY_POLICY_SSL_CHECK",
	"parameters": ""
},
"encrypted-volumes": {
	"name": "encrypted-volumes",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ENCRYPTED_VOLUMES",
	"parameters": "{\"kmsId\": \"\"}"
},
"lambda-concurrency-check": {
	"name": "lambda-concurrency-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "LAMBDA_CONCURRENCY_CHECK",
	"parameters": "{\"ConcurrencyLimitLow</span></dt>\": \"\", \"ConcurrencyLimitHigh</span></dt>\": \"\"}"
},
"lambda-dlq-check": {
	"name": "lambda-dlq-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "LAMBDA_DLQ_CHECK",
	"parameters": "{\"dlqArns</span></dt>\": \"\"}"
},
"lambda-function-settings-check": {
	"name": "lambda-function-settings-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "LAMBDA_FUNCTION_SETTINGS_CHECK",
	"parameters": "{\"runtime</span></dt>\": \"\", \"role</span></dt>\": \"\", \"timeout</span></dt>\": \"\", \"memorySize</span></dt>\": \"\"}"
},
"lambda-function-public-access-prohibited": {
	"name": "lambda-function-public-access-prohibited",
	"description": "Config rule, generated by terraform",
	"source_identifier": "LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED",
	"parameters": ""
},
"lambda-inside-vpc": {
	"name": "lambda-inside-vpc",
	"description": "Config rule, generated by terraform",
	"source_identifier": "LAMBDA_INSIDE_VPC",
	"parameters": "{\"subnetId</span></dt>\": \"\"}"
},
"restricted-common-ports": {
	"name": "restricted-common-ports",
	"description": "Config rule, generated by terraform",
	"source_identifier": "RESTRICTED_INCOMING_TRAFFIC",
	"parameters": "{\"blockedPort1\": \"\", \"blockedPort2\": \"\", \"blockedPort3\": \"\", \"blockedPort4\": \"\", \"blockedPort5\": \"\"}"
},
"restricted-ssh": {
	"name": "restricted-ssh",
	"description": "Config rule, generated by terraform",
	"source_identifier": "INCOMING_SSH_DISABLED",
	"parameters": ""
},
"kms-cmk-not-scheduled-for-deletion": {
	"name": "kms-cmk-not-scheduled-for-deletion",
	"description": "Config rule, generated by terraform",
	"source_identifier": "KMS_CMK_NOT_SCHEDULED_FOR_DELETION",
	"parameters": "{\"kmsKeyIds</span></dt>\": \"\"}"
},
"db-instance-backup-enabled": {
	"name": "db-instance-backup-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "DB_INSTANCE_BACKUP_ENABLED",
	"parameters": "{\"backupRetentionPeriod\": \"\", \"preferredBackupWindow\": \"\", \"checkReadReplicas\": \"\"}"
},
"dynamodb-autoscaling-enabled": {
	"name": "dynamodb-autoscaling-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "DYNAMODB_AUTOSCALING_ENABLED",
	"parameters": ""
},
"dynamodb-table-encryption-enabled": {
	"name": "dynamodb-table-encryption-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "DYNAMODB_TABLE_ENCRYPTION_ENABLED",
	"parameters": ""
},
"dynamodb-throughput-limit-check": {
	"name": "dynamodb-throughput-limit-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "DYNAMODB_THROUGHPUT_LIMIT_CHECK",
	"parameters": ""
},
"rds-enhanced-monitoring-enabled": {
	"name": "rds-enhanced-monitoring-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "RDS_ENHANCED_MONITORING_ENABLED",
	"parameters": ""
},
"rds-instance-public-access-check": {
	"name": "rds-instance-public-access-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "RDS_INSTANCE_PUBLIC_ACCESS_CHECK",
	"parameters": ""
},
"rds-multi-az-support": {
	"name": "rds-multi-az-support",
	"description": "Config rule, generated by terraform",
	"source_identifier": "RDS_MULTI_AZ_SUPPORT",
	"parameters": ""
},
"rds-snapshots-public-prohibited": {
	"name": "rds-snapshots-public-prohibited",
	"description": "Config rule, generated by terraform",
	"source_identifier": "RDS_SNAPSHOTS_PUBLIC_PROHIBITED",
	"parameters": ""
},
"rds-storage-encrypted": {
	"name": "rds-storage-encrypted",
	"description": "Config rule, generated by terraform",
	"source_identifier": "RDS_STORAGE_ENCRYPTED",
	"parameters": "{\"kmsKeyId\": \"\"}"
},
"redshift-cluster-configuration-check": {
	"name": "redshift-cluster-configuration-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": "{\"clusterDbEncrypted\": \"\", \"nodeTypes\": \"\", \"loggingEnabled\": \"\"}"
},
"redshift-cluster-maintenancesettings-check": {
	"name": "redshift-cluster-maintenancesettings-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": "{\"allowVersionUpgrade\": \"\", \"preferredMaintenanceWindow\": \"\", \"automatedSnapshotRetentionPeriod\": \"\"}"
},
"redshift-cluster-public-access-check": {
	"name": "redshift-cluster-public-access-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK",
	"parameters": ""
},
"sagemaker-endpoint-configuration-kms-key-configured": {
	"name": "sagemaker-endpoint-configuration-kms-key-configured",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED",
	"parameters": ""
},
"sagemaker-notebook-no-direct-internet-access": {
	"name": "sagemaker-notebook-no-direct-internet-access",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS",
	"parameters": ""
},
"sagemaker-notebook-kms-configured": {
	"name": "sagemaker-notebook-kms-configured",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED",
	"parameters": "{\"keyArns\": \"\", \"(optional)</span></dt>\": \"\"}"
},
"cloudformation-stack-drift-detection-check": {
	"name": "cloudformation-stack-drift-detection-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUDFORMATION_STACK_DRIFT_DETECTION_CHECK",
	"parameters": "{\"cloudformationRoleArn</span></dt>\": \"\"}"
},
"cloudformation-stack-notification-check": {
	"name": "cloudformation-stack-notification-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUDFORMATION_STACK_NOTIFICATION_CHECK",
	"parameters": ""
},
"cloud-trail-cloud-watch-logs-enabled": {
	"name": "cloud-trail-cloud-watch-logs-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED",
	"parameters": ""
},
"cloudtrail-enabled": {
	"name": "cloudtrail-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUD_TRAIL_ENABLED",
	"parameters": "{\"s3BucketName\": \"\", \"snsTopicArn\": \"\", \"cloudWatchLogsLogGroupArn\": \"\"}"
},
"cloud-trail-encryption-enabled": {
	"name": "cloud-trail-encryption-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUD_TRAIL_ENCRYPTION_ENABLED",
	"parameters": ""
},
"cloud-trail-log-file-validation-enabled": {
	"name": "cloud-trail-log-file-validation-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED",
	"parameters": ""
},
"cloudtrail-s3-dataevents-enabled": {
	"name": "cloudtrail-s3-dataevents-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUDTRAIL_S3_DATAEVENTS_ENABLED",
	"parameters": "{\"S3BucketNames</span></dt>\": \"\"}"
},
"cloudwatch-alarm-action-check": {
	"name": "cloudwatch-alarm-action-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUDWATCH_ALARM_ACTION_CHECK",
	"parameters": "{\"action1\": \"\", \"action2\": \"\"}"
},
"cloudwatch-alarm-resource-check": {
	"name": "cloudwatch-alarm-resource-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": ""
},
"cloudwatch-alarm-settings-check": {
	"name": "cloudwatch-alarm-settings-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUDWATCH_ALARM_SETTINGS_CHECK",
	"parameters": ""
},
"cloudwatch-log-group-encrypted": {
	"name": "cloudwatch-log-group-encrypted",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
	"parameters": "{\"KmsKeyId\": \"\"}"
},
"codebuild-project-envvar-awscred-check": {
	"name": "codebuild-project-envvar-awscred-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK",
	"parameters": ""
},
"codebuild-project-source-repo-url-check": {
	"name": "codebuild-project-source-repo-url-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CODEBUILD_PROJECT_SOURCE_REPO_URL_CHECK",
	"parameters": ""
},
"codepipeline-deployment-count-check": {
	"name": "codepipeline-deployment-count-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CODEPIPELINE_DEPLOYMENT_COUNT_CHECK",
	"parameters": "{\"deploymentLimit</span></dt>\": \"\"}"
},
"codepipeline-region-fanout-check": {
	"name": "codepipeline-region-fanout-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CODEPIPELINE_REGION_FANOUT_CHECK",
	"parameters": "{\"regionFanoutFactor</span></dt>\": \"\"}"
},
"multi-region-cloud-trail-enabled": {
	"name": "multi-region-cloud-trail-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "MULTI_REGION_CLOUD_TRAIL_ENABLED",
	"parameters": ""
},
"required-tags": {
	"name": "required-tags",
	"description": "Config rule, generated by terraform",
	"source_identifier": "REQUIRED_TAGS",
	"parameters": "{\"tag1Key\": \"\", \"tag1Value\": \"\"}"
},
"dms-replication-not-public": {
	"name": "dms-replication-not-public",
	"description": "Config rule, generated by terraform",
	"source_identifier": "DMS_REPLICATION_NOT_PUBLIC",
	"parameters": ""
},
"alb-http-to-https-redirection-check": {
	"name": "alb-http-to-https-redirection-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK",
	"parameters": ""
},
"api-gw-execution-logging-enabled": {
	"name": "api-gw-execution-logging-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "API_GW_EXECUTION_LOGGING_ENABLED",
	"parameters": "{\"loggingLevel</span></dt>\": \"\"}"
},
"api-gw-cache-enabled-and-encrypted": {
	"name": "api-gw-cache-enabled-and-encrypted",
	"description": "Config rule, generated by terraform",
	"source_identifier": "API_GW_CACHE_ENABLED_AND_ENCRYPTED",
	"parameters": ""
},
"api-gw-endpoint-type-check": {
	"name": "api-gw-endpoint-type-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "API_GW_ENDPOINT_TYPE_CHECK",
	"parameters": "{\"endpointConfigurationType</span></dt>\": \"\"}"
},
"cloudfront-viewer-policy-https": {
	"name": "cloudfront-viewer-policy-https",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CLOUDFRONT_VIEWER_POLICY_HTTPS",
	"parameters": ""
},
"internet-gateway-authorized-vpc-only": {
	"name": "internet-gateway-authorized-vpc-only",
	"description": "Config rule, generated by terraform",
	"source_identifier": "INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY",
	"parameters": "{\"AuthorizedVpcIds</span></dt>\": \"\"}"
},
"service-vpc-endpoint-enabled": {
	"name": "service-vpc-endpoint-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SERVICE_VPC_ENDPOINT_ENABLED",
	"parameters": ""
},
"vpc-default-security-group-closed": {
	"name": "vpc-default-security-group-closed",
	"description": "Config rule, generated by terraform",
	"source_identifier": "VPC_DEFAULT_SECURITY_GROUP_CLOSED",
	"parameters": ""
},
"vpc-flow-logs-enabled": {
	"name": "vpc-flow-logs-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "VPC_FLOW_LOGS_ENABLED",
	"parameters": "{\"trafficType</span></dt>\": \"\"}"
},
"vpc-sg-open-only-to-authorized-ports": {
	"name": "vpc-sg-open-only-to-authorized-ports",
	"description": "Config rule, generated by terraform",
	"source_identifier": "VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS",
	"parameters": ""
},
"vpc-vpn-2-tunnels-up": {
	"name": "vpc-vpn-2-tunnels-up",
	"description": "Config rule, generated by terraform",
	"source_identifier": "VPC_VPN_2_TUNNELS_UP",
	"parameters": ""
},
"access-keys-rotated": {
	"name": "access-keys-rotated",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ACCESS_KEYS_ROTATED",
	"parameters": "{\"maxAccessKeyAge</span></dt>\": \"\"}"
},
"acm-certificate-expiration-check": {
	"name": "acm-certificate-expiration-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ACM_CERTIFICATE_EXPIRATION_CHECK",
	"parameters": "{\"daysToExpiration\": \"\"}"
},
"cmk-backing-key-rotation-enabled": {
	"name": "cmk-backing-key-rotation-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "CMK_BACKING_KEY_ROTATION_ENABLED",
	"parameters": ""
},
"fms-security-group-audit-policy-check": {
	"name": "fms-security-group-audit-policy-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "FMS_SECURITY_GROUP_AUDIT_POLICY_CHECK",
	"parameters": "{\"masterSecurityGroupsIds\": \"\", \"(mandatory)</span></dt>\": \"\", \"resourceTags\": \"\", \"(mandatory)</span></dt>\": \"\", \"inScope\": \"\", \"(mandatory)</span></dt>\": \"\", \"excludeResourceTags\": \"\", \"(mandatory)</span></dt>\": \"\", \"resourceTypes\": \"\", \"(mandatory)</span></dt>\": \"\", \"fmsRemediationEnabled\": \"\", \"(mandatory)</span></dt>\": \"\", \"allowSecurityGroup\": \"\", \"(mandatory)</span></dt>\": \"\"}"
},
"fms-security-group-content-check": {
	"name": "fms-security-group-content-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "FMS_SECURITY_GROUP_CONTENT_CHECK",
	"parameters": "{\"vpcIds\": \"\", \"(mandatory)</span></dt>\": \"\", \"securityGroupsIds\": \"\", \"(mandatory)</span></dt>\": \"\", \"fmsRemediationEnabled\": \"\", \"(mandatory)</span></dt>\": \"\", \"allowSecurityGroup\": \"\", \"(mandatory)</span></dt>\": \"\"}"
},
"fms-security-group-resource-association-check": {
	"name": "fms-security-group-resource-association-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "FMS_SECURITY_GROUP_RESOURCE_ASSOCIATION_CHECK",
	"parameters": "{\"vpcIds\": \"\", \"(mandatory)</span></dt>\": \"\", \"securityGroupsIds\": \"\", \"(mandatory)</span></dt>\": \"\", \"resourceTags\": \"\", \"(mandatory)</span></dt>\": \"\", \"excludeResourceTags\": \"\", \"(mandatory)</span></dt>\": \"\", \"resourceTypes\": \"\", \"(mandatory)</span></dt>\": \"\", \"fmsRemediationEnabled\": \"\", \"(mandatory)</span></dt>\": \"\"}"
},
"fms-shield-resource-policy-check": {
	"name": "fms-shield-resource-policy-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "FMS_SHIELD_RESOURCE_POLICY_CHECK",
	"parameters": "{\"webACLId</span></dt>\": \"\", \"resourceTags</span></dt>\": \"\", \"excludeResourceTags</span></dt>\": \"\", \"fmsManagedToken</span></dt>\": \"\", \"fmsRemediationEnabled</span></dt>\": \"\"}"
},
"fms-webacl-resource-policy-check": {
	"name": "fms-webacl-resource-policy-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "FMS_WEBACL_RESOURCE_POLICY_CHECK",
	"parameters": "{\"webACLId</span></dt>\": \"\", \"resourceTags</span></dt>\": \"\", \"excludeResourceTags</span></dt>\": \"\", \"fmsManagedToken</span></dt>\": \"\", \"fmsRemediationEnabled</span></dt>\": \"\"}"
},
"fms-webacl-rulegroup-association-check": {
	"name": "fms-webacl-rulegroup-association-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "FMS_WEBACL_RULEGROUP_ASSOCIATION_CHECK",
	"parameters": "{\"ruleGroups</span></dt>\": \"\", \"fmsManagedToken</span></dt>\": \"\", \"fmsRemediationEnabled</span></dt>\": \"\"}"
},
"guardduty-non-archived-findings": {
	"name": "guardduty-non-archived-findings",
	"description": "Config rule, generated by terraform",
	"source_identifier": "GUARDDUTY_NON_ARCHIVED_FINDINGS",
	"parameters": ""
},
"guardduty-enabled-centralized": {
	"name": "guardduty-enabled-centralized",
	"description": "Config rule, generated by terraform",
	"source_identifier": "GUARDDUTY_ENABLED_CENTRALIZED",
	"parameters": "{\"CentralMonitoringAccount\": \"\", \"(optional)</span></dt>\": \"\"}"
},
"iam-group-has-users-check": {
	"name": "iam-group-has-users-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_GROUP_HAS_USERS_CHECK",
	"parameters": ""
},
"iam-password-policy": {
	"name": "iam-password-policy",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_PASSWORD_POLICY",
	"parameters": "{\"RequireUppercaseCharacters\": \"\", \"RequireLowercaseCharacters\": \"\", \"RequireSymbols\": \"\", \"RequireNumbers\": \"\", \"MinimumPasswordLength\": \"\", \"PasswordReusePrevention\": \"\", \"MaxPasswordAge\": \"\"}"
},
"iam-policy-blacklisted-check": {
	"name": "iam-policy-blacklisted-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_POLICY_BLACKLISTED_CHECK",
	"parameters": "{\"policyArns</span></dt>\": \"\", \"exceptionList</span></dt>\": \"\"}"
},
"iam-policy-in-use": {
	"name": "iam-policy-in-use",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_POLICY_IN_USE",
	"parameters": "{\"policyARN\": \"\", \"(mandatory)</span></dt>\": \"\", \"policyUsageType\": \"\", \"(optional)</span></dt>\": \"\"}"
},
"iam-policy-no-statements-with-admin-access": {
	"name": "iam-policy-no-statements-with-admin-access",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS",
	"parameters": ""
},
"iam-role-managed-policy-check": {
	"name": "iam-role-managed-policy-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_ROLE_MANAGED_POLICY_CHECK",
	"parameters": "{\"managedPolicyNames</span></dt>\": \"\"}"
},
"iam-root-access-key-check": {
	"name": "iam-root-access-key-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_ROOT_ACCESS_KEY_CHECK",
	"parameters": ""
},
"iam-user-group-membership-check": {
	"name": "iam-user-group-membership-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": "{\"groupName\": \"\"}"
},
"iam-user-mfa-enabled": {
	"name": "iam-user-mfa-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_USER_MFA_ENABLED",
	"parameters": ""
},
"iam-user-no-policies-check": {
	"name": "iam-user-no-policies-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_USER_NO_POLICIES_CHECK",
	"parameters": ""
},
"iam-user-unused-credentials-check": {
	"name": "iam-user-unused-credentials-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "IAM_USER_UNUSED_CREDENTIALS_CHECK",
	"parameters": "{\"maxCredentialUsageAge</span></dt>\": \"\"}"
},
"mfa-enabled-for-iam-console-access": {
	"name": "mfa-enabled-for-iam-console-access",
	"description": "Config rule, generated by terraform",
	"source_identifier": "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS",
	"parameters": ""
},
"root-account-hardware-mfa-enabled": {
	"name": "root-account-hardware-mfa-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ROOT_ACCOUNT_HARDWARE_MFA_ENABLED",
	"parameters": ""
},
"root-account-mfa-enabled": {
	"name": "root-account-mfa-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": ""
},
"secretsmanager-rotation-enabled-check": {
	"name": "secretsmanager-rotation-enabled-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SECRETSMANAGER_ROTATION_ENABLED_CHECK",
	"parameters": "{\"maximumAllowedRotationFrequency\": \"\", \"(Optional)</span></dt>\": \"\"}"
},
"secretsmanager-scheduled-rotation-success-check": {
	"name": "secretsmanager-scheduled-rotation-success-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK",
	"parameters": ""
},
"shield-advanced-enabled-autorenew": {
	"name": "shield-advanced-enabled-autorenew",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SHIELD_ADVANCED_ENABLED_AUTORENEW",
	"parameters": ""
},
"shield-drt-access": {
	"name": "shield-drt-access",
	"description": "Config rule, generated by terraform",
	"source_identifier": "SHIELD_DRT_ACCESS",
	"parameters": ""
},
"ebs-snapshot-public-restorable-check": {
	"name": "ebs-snapshot-public-restorable-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK",
	"parameters": ""
},
"efs-encrypted-check": {
	"name": "efs-encrypted-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EFS_ENCRYPTED_CHECK",
	"parameters": ""
},
"elb-deletion-protection-enabled": {
	"name": "elb-deletion-protection-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "ELB_DELETION_PROTECTION_ENABLED",
	"parameters": ""
},
"emr-master-no-public-ip": {
	"name": "emr-master-no-public-ip",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EMR_MASTER_NO_PUBLIC_IP",
	"parameters": ""
},
"emr-kerberos-enabled": {
	"name": "emr-kerberos-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "EMR_KERBEROS_ENABLED",
	"parameters": "{\"ticketLifetimeInHours\": \"\", \"(optional)\": \"\", \"realm\": \"\", \"(optional)\": \"\", \"domain\": \"\", \"(optional)\": \"\", \"adminServer\": \"\", \"(optional)\": \"\", \"kdcServer\": \"\", \"(optional)\": \"\"}"
},
"s3-account-level-public-access-blocks": {
	"name": "s3-account-level-public-access-blocks",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS",
	"parameters": ""
},
"s3-bucket-blacklisted-actions-prohibited": {
	"name": "s3-bucket-blacklisted-actions-prohibited",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_BUCKET_BLACKLISTED_ACTIONS_PROHIBITED",
	"parameters": "{\"blacklistedactionpatterns</span></dt>\": \"\"}"
},
"s3-bucket-logging-enabled": {
	"name": "s3-bucket-logging-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": "{\"targetBucket\": \"\", \"targetPrefix\": \"\"}"
},
"s3-bucket-policy-grantee-check": {
	"name": "s3-bucket-policy-grantee-check",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_BUCKET_POLICY_GRANTEE_CHECK",
	"parameters": "{\"awsPrincipals</span></dt>\": \"\", \"servicePrincipals</span></dt>\": \"\", \"federatedUsers</span></dt>\": \"\", \"ipAddresses\": \"\", \"vpcIds</span></dt>\": \"\"}"
},
"s3-bucket-policy-not-more-permissive": {
	"name": "s3-bucket-policy-not-more-permissive",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE",
	"parameters": "{\"controlPolicy</span></dt>\": \"\"}"
},
"s3-bucket-public-read-prohibited": {
	"name": "s3-bucket-public-read-prohibited",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_BUCKET_PUBLIC_READ_PROHIBITED",
	"parameters": ""
},
"s3-bucket-public-write-prohibited": {
	"name": "s3-bucket-public-write-prohibited",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_BUCKET_PUBLIC_WRITE_PROHIBITED",
	"parameters": ""
},
"s3-bucket-replication-enabled": {
	"name": "s3-bucket-replication-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_BUCKET_REPLICATION_ENABLED",
	"parameters": ""
},
"s3-bucket-server-side-encryption-enabled": {
	"name": "s3-bucket-server-side-encryption-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED",
	"parameters": ""
},
"s3-bucket-ssl-requests-only": {
	"name": "s3-bucket-ssl-requests-only",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": ""
},
"s3-bucket-versioning-enabled": {
	"name": "s3-bucket-versioning-enabled",
	"description": "Config rule, generated by terraform",
	"source_identifier": "",
	"parameters": "{\"isMfaDeleteEnabled\": \"\"}"
},
